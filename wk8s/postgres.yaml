apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: postgres
  name: postgres-deployment
  namespace: mybatis
#  namespace: default
spec:
#  progressDeadlineSeconds: 600
  serviceName: postgres-service
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: postgres
#  strategy:
#    rollingUpdate:
#      maxSurge: 25%
#      maxUnavailable: 25%
#    type: RollingUpdate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - env:
          - name: POSTGRES_PASSWORD
            value: postgres
          - name: TZ
            value: "Europe/Minsk"
          image: postgres:14.1-alpine
          ports:
            - containerPort: 5432
          imagePullPolicy: IfNotPresent
          name: postgres
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: mybatis
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

#
#apiVersion: v1
#kind: Secret
#metadata:
#  name: rabbitmq-secret
#type: Opaque
#data:
#  rabbitmq-user: ZGVmYXVsdF91c2VyX3F0X3M4bXlaWkNDeXNCS2JvaW0=
#  rabbitmq-password: NzNua0YwSVpKdm52QXRud3YtN0VEMXZfVWVPQXJVZGw=
#---
#apiVersion: rabbitmq.com/v1beta1
#kind: RabbitmqCluster
#metadata:
#  name: rabbitmq-service
#spec:
#  replicas: 3
#  resources:
#    limits:
#      cpu: 1
#      memory: 1Gi
#  service:
#    type: ClusterIP
#---
#apiVersion: rabbitmq.com/v1beta1
#kind: Policy
#metadata:
#  name: ha-policy
#  namespace: default
#spec:
#  name: transient # name of the policy
#  vhost: "/" # default to '/' if not provided
#  pattern: "" # regex used to match queues and exchanges
#  applyTo: "all" # set to 'queues', 'exchanges', or 'all'
#  definition:
#    ha-mode:
#      all
#    ha-sync-mode:
#      automatic
#  rabbitmqClusterReference:
#    name: rabbitmq-service #name of the rabbitmqcluster