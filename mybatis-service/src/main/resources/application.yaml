spring:
  rabbitmq:
    # KUBER VER
    host: rabbitmq-service
#    host: nginx
#    host: rabbitmq
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASSWORD}
    port: 5672
#    port: 81
  datasource:
    #    url: jdbc:postgresql://postgres:5432/mybatis
    #    username: postgres
    #    password: postgres
    # KUBERNETES vER
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  sql:
    init:
      schema-locations: classpath:/sql/schema.sql
      data-locations: classpath:/sql/data.sql
server:
  port: 9090
mybatis:
  config-location: classpath:/mybatis/mybatis.xml
  mapper-locations: classpath:/mybatis/mapper/*.xml
  type-aliases-package: com.solvd.ikaravai.mybatisservice.model
logging:
  level:
    com.solvd.ikaravai.mybatisservice.mapper: TRACE
    org.springframework.amqp: INFO
    com.rabbitmq: INFO
rabbitmq:
  out:
    simple:
      routingKey: save_user_route
      queue: save_user_q
      exchange: save_user_ex
    complex:
      fanout:
        queue1: fanout_queue1
        queue2: fanout_queue2
        exchange: fanout_exchange
  in:
    simple:
      routingKey: save_user_resp_route
      queue: save_user_resp_q
      exchange: save_user_resp_ex
